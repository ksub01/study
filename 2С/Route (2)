А почему ты думаешь вообще, что твой алгоритм верный?
В частности, меня очень удивляет запись
start*(time // 2) + neighbour*(time // 2)
это типа ты умеешь просто туда-сюда ходить к соседу?
Есть же намного более сложные варианты.


import copy
n, m = map(int, input().rstrip().split())
mas = [[0]*(n+2)]
way = [[0]*(n+1) for i in range(n+1)]
ans = copy.deepcopy(way)
for i in range(n):
    mas.append([0] + [int(x) for x in input().rstrip().split()] + [0])
mas.append([0]*(n+2))
for i in range(1, n+1):
    for j in range(1, n+1):
        way[i][j] = max(way[i-1][j], way[i][j-1]) + mas[i][j]
        time = m - i - j + 1
        if time > 0:
            start = mas[i][j]
            neighbour = max(mas[i-1][j], mas[i][j-1], mas[i+1][j], mas[i][j+1])
            cash = way[i][j]
            if time % 2 == 0:
                cash += start*(time // 2) + neighbour*(time // 2)
            else:
                cash += start*(time // 2) + neighbour*(time // 2) + neighbour
            ans[i][j] = max(ans[i-1][j], ans[i][j-1], cash)
        elif time == 0:
            ans[i][j] = way[i][j]
        elif time < 0:
            ans[i][j] = max(ans[i-1][j], ans[i][j-1])
print(ans[-1][-1])


Зачту, тут, похоже, на питоне быстрее не сделаешь
import copy
n, m = map(int, input().rstrip().split())
mas = [[0]*(n+2)]
ans1 = [[-1]*(n+2) for i in range(n+2)]
ans2 = [[-1]*(n+2) for i in range(n+2)]
for i in range(n):
    mas.append([0] + [int(x) for x in input().rstrip().split()] + [0])
mas.append([0]*(n+2))
ans1[1][1] = mas[1][1]


for k in range(1, m):
    for x1 in range(1, n+1):
        for y1 in range(1, n+1):
            p = -1
            for x2, y2 in [[x1 + 1, y1], [x1 - 1, y1], [x1, y1 + 1], [x1, y1 - 1]]:
                if ans1[x2][y2] != -1:
                    p = max(ans1[x2][y2] + mas[x1][y1], p)
            ans2[x1][y1] = p
    ans1 = copy.deepcopy(ans2)
p = -1
for i in range(len(ans1)):
    for j in range(len(ans1[i])):
        p = max(p, ans1[i][j])
print(p)


Найди ошибку: Маршрут(2)
n, k=map(int, input().split())
a=[ list(map(int, input().split())) for i in range(n) ]
summ= [[ 0 for i in range(n+2) ] for j in range(n+2) ]
summ[0][0]=a[0][0]
for x in range(1, k):
    for i in range(n):
        for j in range(n):
            if (i+j)%2!=x%2:
                ma=0
                if summ[i+1][j]>ma:
                    ma=summ[i+1][j]
                if summ[i-1][j]>ma:
                    ma=summ[i-1][j]
                if summ[i][j-1]>ma:
                    ma=summ[i][j-1]
                if summ[i][j+1]>ma:
                    ma=summ[i][j+1]
                if ma!=0:
                    summ[i][j]=ma+a[i][j]

ma=0
for i in range(n+1):
    for j in range(n+1):
        if summ[i][j]>ma: ma=summ[i][j]
print(ma)


Хорошие решения
// https://algoprog.ru/material/p637

#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

template <typename T>
void print_vector(vector<T> &a) {
  for (auto e: a) { cout << e << " "; }
  cout << endl;
}

template <typename T>
void print_matrix(vector<vector<T>> &a) {
  for (auto e: a) print_vector(e);
}



int main() {
  int n, k;
  cin >> n >> k;

  vector<vector<int>> a(n, vector<int>(n));

  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      cin >> a[i][j];
    }
  }

  vector<vector<vector<int>>> dp(2, vector<vector<int>>(n, vector<int>(n)));

  int max_dp = 0;
  for (int t = 1; t <= k; ++t) {
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < n; ++j) {
	int prev = 0;
	if (i>=1)  prev = max(prev, dp[(t-1) % 2][i-1][j]);
	if (j>=1)  prev = max(prev, dp[(t-1) % 2][i][j-1]);
	if (i<n-1) prev = max(prev, dp[(t-1) % 2][i+1][j]);
	if (j<n-1) prev = max(prev, dp[(t-1) % 2][i][j+1]);
	dp[t % 2][i][j] = prev + a[i][j];
      }
    }
  }

  cout << dp[k % 2][0][0] << endl;
}
Кодировка: 
Скачать
//#include "/Users/stepan_bagritsevich/Dropbox/stdc++.h"
#include <bits/stdc++.h>
 
using namespace std;

#define pb push_back
#define fs first
#define sc second

typedef long long ll;
typedef long double ld;

const int MAX_VAL = 2147483647, MIN_VAL = -2147483648;

int main() {
    int n, k;
    cin >> n >> k;
    
    vector < vector < int > > price(n + 2, vector < int > (n + 2));
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            cin >> price[i][j];
    
    vector < vector < int > > a(n + 2, vector < int > (n + 2)), b(n + 2, vector < int > (n + 2));
    a[1][1] = price[1][1];
    b[1][1] = price[1][1];
    
    for (int z = 0; z < k - 1; z++) {
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                int x = max(max(a[i - 1][j], a[i + 1][j]), max(a[i][j - 1], a[i][j + 1]));
                if (x != 0)
                    b[i][j] = x + price[i][j];
            }
        }
        
        a = b;
    }
    
    int ans = MIN_VAL;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            if (a[i][j] > ans)
                ans = a[i][j];
    
    cout << ans << "\n";
    return 0;
}
Кодировка: 
Скачать
#include <fstream>
#include <vector>
using namespace std;

int main() {
    ifstream fin("input.txt");
    int n, k;
    fin >> n >> k;
    vector<vector<vector<int>>> V(3, vector<vector<int>>(n+2, vector<int>(n+2)));
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            fin >> V[2][i][j];
        }
    }
    fin.close();
    V[1][1][1] = V[2][1][1];
    int m = V[2][1][1];
    for (int c = 1; c < k; c++) {
        bool r = c % 2;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                int s = max(max(V[r][i-1][j], V[r][i+1][j]),
                            max(V[r][i][j-1], V[r][i][j+1]));
                if (s > 0) {
                    s += V[2][i][j];
                    V[!r][i][j] = s;
                    m = max(m, s);
                }
            }
        }
    }
    ofstream fout("output.txt");
    fout << m << endl;
    fout.close();
}
