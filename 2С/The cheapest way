n, m = map(int, input().rstrip().split())

mas = [[0]*(m+1)]
ans = [[100000] + [0] + [100000]*(m-1)]
ans.extend([[100000] + [0]*(m) for x in range(n)])  


for i in range(n):
    mas.append([1000] + [int(x) for x in input().rstrip().split()])
for i in range(1, n+1):
    for j in range(1, m+1):
        ans[i][j] = min(ans[i-1][j], ans[i][j-1]) + mas[i][j]
print(ans[n][m])

Найди ошибку: Cамый дешевый путь
//#include "stdafx.h"
#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

int main() {
	short n, m;
	cin >> n >> m;
	vector<vector<long long>> Way(n, vector<long long>(m));
	for (short i = 0; i < n; i++) {
		for (short j = 0; j < n; j++) {
			cin >> Way[i][j];
		}
	}
	for (short i = 1; i < n; i++) {
		Way[i][0] += Way[i - 1][0];
	}
	for (short i = 1; i < m; i++) {
		Way[0][i] += Way[0][i - 1];
	}
	for (short i = 1; i < n; i++) {
		for (short j = 1; j < m; j++) {
			Way[i][j] += min(Way[i - 1][j], Way[i][j - 1]);
		}
	}
	cout << Way[n - 1][m - 1] << endl;
	return 0;
}


n, m = map(int, input().split())
result = []
for i in range(m):
    result.append([0] * n)
a = []
for i in range(n):
    a.append(list(map(int, input().split())))
for x in range(n - 1, -1, -1):
    for y in range(m - 1, -1, -1):
        if (x == n - 1 and y == m - 1):
            result[x][y] = a[x][y]
        elif (x == n - 1):
            result[x][y] = a[x][y] + result[x][y + 1]
        elif (y == m - 1):
            result[x][y] = a[x][y] + result[x + 1][y]
        else:
            result[x][y] = a[x][y] + min(result[x + 1][y], result[x][y + 1])
print(result[0][0])



Хорошие решения
n, m = map(int, input().split())
a = []
for i in range(n):
    a.append(list(map(int, input().split())))
for i in range(1, m):
    a[0][i] += a[0][i-1]
for i in range(1, n):
    a[i][0] += a[i-1][0]
    for j in range(1, m):
        a[i][j] += min(a[i-1][j], a[i][j-1])
print(a[n-1][m-1])
Кодировка: 
Скачать
n,m = map(int, input().split())
a = []
for i in range(n):
    a.append(list(map(int, input().split())))
for i in range(1,n):
    a[i][0] = a[i][0] + a[i-1][0]
for i in range(1,m):
    a[0][i] = a[0][i] + a[0][i-1]
for i in range(1,n):
    for j in range(1,m):
        a[i][j] = a[i][j] + min(a[i-1][j],a[i][j-1])
print(a[-1][-1])

#���-�� ������� ����� ������... ����� ���-������ ������� ���, ����� �� ���� ������?
#P.S. �� ���������� ������ � ���� ��������� �����-�� ���. �� ��������� �������� :)
Кодировка: 
Скачать
var a,ans: array[1..20,1..20] of integer; 
var n,m: integer;
var i,j: integer;
begin;
read(n,m);
for i:=1 to n do
    for j:=1 to m do
        read(a[i,j]);
ans[1,1]:=a[1,1];
for i:=2 to n do
    ans[i,1]:=ans[i-1,1]+a[i,1];
for j:= 2 to m do
    ans[1,j]:=ans[1,j-1]+a[1,j];
for i:=2 to n do
    for j:=2 to m do
        ans[i,j]:=min(ans[i-1,j],ans[i,j-1])+a[i,j];
 write(ans[n,m]);
 end.
Кодировка: 
Скачать
#include <iostream>
#include <vector>

using namespace std;

int main(){
    int N, M;
    cin >> N >> M;
    vector<vector<int>> a(N, vector<int>(M));
    for (int i = 0; i < N; i++){
        for (int j = 0; j < M; j++)
            cin >> a[i][j];
    }
    for (int i = 1; i < N; i++)
        a[i][0] += a[i-1][0];
    for (int j = 1; j < M; j++)
        a[0][j] += a[0][j-1];
    for (int i = 1; i < N; i++){
        for (int j = 1; j < M; j++)
            a[i][j] += min(a[i-1][j], a[i][j-1]);
    }
    cout << a[N-1][M-1];
}
