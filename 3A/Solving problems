n, a = map(int, input().split(' '))
list1 = []
for i in range(n):
    a1, b1 = map(int, input().split(' '))
    list1.append((a1, b1))
list1.sort()
cou = 0
for i in list1:
    if a >= i[0]:
        a += i[1]
        cou += 1
print(cou)


Хорошие решения
def bubble(a):
    do=True
    while do:
        do=False
        for i in range(len(a)-1):
            if a[i+1][0]<a[i][0]:
                a[i], a[i+1]=a[i+1], a[i]
                do=True
    return a
n, skill=map(int, input().split())
tasks=[]
for i in range(n):
    tasks.append(list(map(int, input().split())))
tasks=bubble(tasks)
done=0
for i in range(len(tasks)):
    if tasks[i][0]>skill:
        break
    skill+=tasks[i][1]
    done+=1
print(done)
Кодировка: 
Скачать
#include <iostream>

using namespace std;

int a[100], b[100];

int main() {
	int N, A;
	cin >> N >> A;
	for (int i = 0; i < N; i++) {
		cin >> a[i] >> b[i];
	}
	for (int i = 1; i < N; i++) {
		for (int j = i; j > 0 && a[j] < a[j - 1]; j--) {
			swap(a[j], a[j - 1]);
			swap(b[j], b[j - 1]);
		}
	}
	int ans = 0;
	for (int i = 0; i < N && A >= a[i]; i++) {
		A += b[i];
		ans++;
	}
	cout << ans;
	return 0;
}
Кодировка: 
Скачать
#include <iostream>
#include <vector>

using namespace std;

int main(void)
{
	int N, A;
	//int a[100][2];
	vector<vector <int>> a;
	int i,j,q,w,ans;
	cin >> N >> A;
	for (i = 0; i < N; i++)
	{
		//cin >> a[i][0] >> a[i][1];
		cin >> q >> w;
		a.push_back({ q,w });
	}
	for (i=0;i<N-1;i++) 
		for (j=i+1;j<N;j++) 
			if (a[i][0]>a[j][0])
			{
				auto j3 = a[i];
				a[i] = a[j];
				a[j] = j3;
			}
	ans = 0;
	for (i = 0; i < N; i++)
	{
		if (A >= a[i][0])
		{
			A += a[i][1];
			ans++;
		}
		else
			break;
	}
	cout << ans;
	return 0;
}
Кодировка: 
Скачать
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main(){
    int N, power, counter = 0;
    cin >> N >> power;
    vector<pair<int, int>> a(N);
    for (int i = 0; i < N; i++)
        cin >> a[i].first >> a[i].second;
    sort(a.begin(), a.end());
    for (int i = 0; i < N; i++){
        if (a[i].first <= power){
            power += a[i].second;
            counter++;
        }
    }
    cout << counter;
}
