n = int(input())
list2 = [[0]*(12) for x in range(n+1)]
list2[1] = [0, 0] + [1] * 9 + [0]
for i in range(2, n+1):
    for j in range(1, 11):
        list2[i][j] = list2[i-1][j-1] + list2[i-1][j] + list2[i-1][j+1]
print(sum(list2[-1]))



Хорошие решения
{$mode delphi}
{$I+, Q+, R+, S+}
var n, i, j, s: integer;
    a:array[-1..10, 0..22] of integer;
begin
  read(n);
  for i := 1 to 9 do
    a[i, 1] := 1;
    
    
  for i := 2 to n do
    for j := 0 to 9 do
      a[j, i] := a[j - 1, i - 1] + a[j, i - 1] + a[j + 1, i - 1];
  
  
  for i := 2 to n - 1 do
    for j := 0 to 9 do
      a[j, i] := a[j - 1, i + 1] + a[j, i + 1] + a[j + 1, i + 1];
  
  
  for j := 0 to 9 do
    s := s + a[j, n];
  write(s);
end.
Кодировка: 
Скачать
n = int(input())
a=[]
a.append([0, 1, 1, 1, 1, 1, 1, 1, 1, 1])
for i in range(1, n):
    a.append([0]*10)
    a[i][0]=a[i-1][0]+a[i-1][1]
    a[i][9]=a[i-1][9]+a[i-1][8]
    for j in range(1, 9):
        a[i][j]=a[i-1][j-1]+a[i-1][j]+a[i-1][j+1]
print(sum(a[-1]))
Кодировка: 
Скачать
n = int(input())
cur = [1] * 12
cur[0], cur[1], cur[11] = 0, 0, 0

for i in range(1, n):
    prev = cur.copy()
    for j in range(1, 11):
        cur[j] += prev[j - 1] + prev[j + 1]
print(sum(cur))
Кодировка: 
Скачать
#include <iostream>
#include <vector>
using namespace std;
int main(){
    int n;
     cin>> n;
     vector<vector<int>> dp(n, vector<int>(10, 0));
     for(int i =1;i<10;i++){
        dp[0][i] = 1;
     }
     for(int i = 0;i<n-1;i++){
        for (int j = 0; j < 10;j++){
                if(j < 9)dp[i+1][j+1]+= dp[i][j];
                if(j > 0)dp[i+1][j-1]+= dp[i][j];
                dp[i+1][j] += dp[i][j];
        }
     }
     int ans = 0;
      for(int i = 0; i<10;i++){
        ans+=dp[n-1][i];
      }
      cout<<ans;

    return 0;
}
Кодировка: 
Скачать
#include <iostream>
#include <vector>

using namespace std;

int main(){
    int n, s = 0;
    cin >> n;
    vector<vector<int>> a;
    a.resize(10);
    a[0].push_back(0);
    for (int i = 1; i < 10; i++)
        a[i].push_back(1);
    for (int i = 1; i < n; i++){
        a[0].push_back(a[0][i - 1] + a[1][i - 1]);
        for (int j = 1; j < 9; j++)
            a[j].push_back(a[j - 1][i - 1] + a[j][i - 1] + a[j + 1][i - 1]);
        a[9].push_back(a[8][i - 1] + a[9][i - 1]);
    }
    for (int i = 0; i < 10; i++)
        s += a[i][n - 1];
    cout << s;
}
