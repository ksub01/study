if n != 1:
почему это особый случай?
Кажется, основной алгоритм
тут прекрасно отработает.

n = int(input())
list2 = [None] * (n + 1)
list2[0] = 1
if n >= 2:
    list2[1] = 1
if n != 1:
    for i in range(2, n + 1):
        list2[i] = (list2[i-1] + list2[i-2]) % 10
    print(list2[-1])
else:
    print(1)
#print(list2)


n = int(input())
list2 = [None] * (n + 1)
list2[0] = 1
list2[1] = 1
for i in range(2, n + 1):
    list2[i] = (list2[i-1] + list2[i-2]) % 10
print(list2[-1])



Хорошие решения
#include <iostream>

using namespace std;

int main() {
    int n, a = 1, b = 1;
    cin >> n;
    for (int i = 2; i <= n; i++){
        int temp = b;
        b = (b + a) % 10;
        a = temp;
    }
    cout << b;
    return 0;
}
Кодировка: 
Скачать
#include <iostream>
#include <set>
#include <vector>
#include <algorithm>
#include <list>
#include <fstream>
#include <cmath>
#include <queue>

using namespace std;

const int MIN = -1000000000;

int main()
{
    int n;
    int dp[1001];
    cin >> n;
    dp[0] = 1;
    dp[1] = 1;
    for (int i = 2; i < 1001; i++) {
        dp[i] = (dp[i - 1] + dp[i - 2]) % 10;
    }
    cout << dp[n];
    return 0;

}
Кодировка: 
Скачать
n=int(input())
f=[1]*(n+1)
for i in range(2,n+1):
    f[i]=(f[i-1]+f[i-2])%10
print(f[-1])
Кодировка: 
Скачать
n = int(input())
f = [1]*(n+1)
for i in range(1,n):
    f[i+1] = (f[i] + f[i-1]) % 10
print(f[n])



Найди ошибку
a=int(input())
b=[0,1]
for i in range(0,a):
    b.append(b[0+i]+b[1+i])
print(b[(a+1)%10])


n = int(input())
a = [1, 1]
for i in range(1, n):
    a.append(a[i] + a[i - 1])
    b = a[i + 1] % 10
print(b)
