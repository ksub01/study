Как минимум, почему вы пробел обрабатываете
не так же, как остальные знаки препинания?
В строке
abc,def
_два_ слова

Во-вторых, проверьте, когда len(text[i]) нечетно.
В-третьих, есть еще проблемы,
но хотя бы эти две проблемы сначала решите.

file1 = open('input.txt',  encoding='cp866')
file2 = open('output.txt', 'w', encoding='cp866')

text = []
for i in file1.readlines():
    if i != ' \n':
        text.append(i.rstrip())

for i in range(len(text)):
    text[i] = text[i].split()


for i in range(len(text)):
    cou = 0
    for j in text[i]:
        if len(set(j) - {'.', '!', '?', ':', '-', ',', ';', '(', ')'}) <= 3:
            cou += 1
    if cou >= len(text[i])// 2:
        text[i] = ''

for i in range(len(text)):
    k = ' '.join(text[i])
    if k != '':
        file2.write(k + '\n')
        
Как минимум, вы выводите не совсем те строки,
которые были во входных данных

file1 = open('input.txt',  encoding='cp866')
file2 = open('output.txt', 'w', encoding='cp866')

text = []
for i in file1.readlines():
    if i != ' \n':
        text.append(i.rstrip())

for i in range(len(text)):
    for j in text[i]:
        if j in  {'.', '!', '?', ':', '-', ',', ';', '(', ')'}:
            text[i] = text[i].replace(j, j+' ')
    text[i] = text[i].split()


for i in range(len(text)):
    cou = 0
    for j in text[i]:
        if len(set(j) - {'.', '!', '?', ':', '-', ',', ';', '(', ')'}) <= 3:
            cou += 1
    if len(text[i]) % 2 == 0 and cou >= len(text[i])// 2:
        text[i] = ''
    elif len(text[i]) % 2 != 0 and cou >= (len(text[i]) + 1)// 2:
        text[i] = ''


for i in range(len(text)):
    k = ' '.join(text[i])
    if k != '':
        file2.write(k + '\n')

Я вижу как минимум следующие проблемы
text.append(i.rstrip())
вы теряете пробелы на конце строки

and i != len(text)-1:
но почему??!!

file1 = open('input.txt',  encoding='cp866')
file2 = open('output.txt', 'w', encoding='cp866')

text = []
for i in file1.readlines():
    if i != ' \n':
        text.append(i.rstrip())


for string in range(len(text)):
    cou = 0
    word = ''
    cash = {}
    value = 0
    for letter in text[string]:
        if not letter in {' ', '.' , '!', '?', ':' , '-', ',' , ';', '(', ')'}:
            word = word + letter
            if letter in cash:
                cash[letter] += 1
            else:
                cash[letter] = 1
        else:
            if word != '':
                value += 1
                word = ''
                if len(cash) <= 3:
                    cou += 1
                cash = {}
    if word != '':
        value += 1
        if len(cash) <= 3:   
            cou += 1
            
 
    if value % 2 == 0 and cou >= (value//2) and value != 0:
        text[string] = ''
    elif value % 2 != 0 and cou >= (value + 1)// 2 and value != 0:
        text[string] = ''


for i in range(len(text)):
    if text[i] != '' and i != len(text)-1:
        file2.write(text[i] + '\n')
        
        
 if i != ' \n':
я не понял, зачем вообще эта проверка

    if value % 2 == 0 and cou >= (value//2) and value != 0:
        text[string] = ''
    elif value % 2 != 0 and cou >= (value + 1)// 2 and value != 0:
        text[string] = ''
кажется, намного проще было бы написать
cou >= value * 2

    if i == pos:
        file2.write(text[i])
я так и не понял, почему вы не хотите выводить \n после последней строчки.
А вообще, намного проще было бы вообще не обрезать \n на конце введенных строк,
считать \n знаком препинания (тогда еще и не надо было бы 
дублировать if word != '':), и выводить строку сразу с тем \n, который вы ввели.

И см. "хорошие решения"

file1 = open('input.txt',  encoding='cp866')
file2 = open('output.txt', 'w', encoding='cp866')

text = []
for i in file1.readlines():
    if i != ' \n':
        if i[-1] == '\n':
            text.append(i[:-1])
        else:
            text.append(i)


for string in range(len(text)):
    cou = 0
    word = ''
    cash = {}
    value = 0
    for letter in text[string]:
        if not letter in {' ', '.' , '!', '?', ':' , '-', ',' , ';', '(', ')'}:
            word = word + letter
            if letter in cash:
                cash[letter] += 1
            else:
                cash[letter] = 1
        else:
            if word != '':
                value += 1
                word = ''
                if len(cash) <= 3:
                    cou += 1
                cash = {}
    if word != '':
        value += 1
        if len(cash) <= 3:   
            cou += 1
            
 
    if value % 2 == 0 and cou >= (value//2) and value != 0:
        text[string] = ''
    elif value % 2 != 0 and cou >= (value + 1)// 2 and value != 0:
        text[string] = ''

pos = -1
for i in range(len(text)-1, -1, -1):
    if text[i] != '':
        pos = i
        break


for i in range(len(text)):
    if i == pos:
        file2.write(text[i])
        break
    elif text[i] != '' and i != len(text)-1:
        file2.write(text[i] + '\n')
        
        
Найди ошибку: Цензура
def podz(s):
    global vc, pd
    n=len(s)
    vc=0
    pd=0
    pr='.!?:-,:() \n'
    i=0
    while i<n:
        j=i
        while j<n and pr.find(s[j])==-1:
            j+=1
        if i==j:
            i+=1
        else:
            ss=set(s[i:j])
            #ssss='=='+ s[i:j]+ '=='
            #s1.write(ssss)
            vc+=1
            if len(ss)<=3:
                pd+=1
            i=j
   # ss=str(vc)+' '+str(pd)+ss
    if pd>=vc//2+vc%2:
        return False
                       
    else:
        return True
        
        
   
s2= open("input.txt", "r", encoding="cp866")
s=s2.readlines()
s1=open("output.txt", "w", encoding="cp866")
ss=[]
for i in range(len(s)):
    #print(podz(s[i]))
    #print(s[i][:-1], vc, pd, vc//2)
    if podz(s[i]):
        s1.write(s[i][::] )
        
s2.close()
s1.close()


Хорошие решения
data = open("input.txt", "r", encoding="cp866").readlines()
w = []
for i in range(len(data)):
    d = data[i] + " "
    a = []
    x = 0
    b = 0
    c = 0
    for j in range(len(d)):
        if d[j] not in [".", "!", "?", ":", "-", ",", ";", "(", ")", " ", "\n"]:
            c = 0
            if len(a) < 4:
                e = 0
                for l in range(len(a)):
                    if d[j] == a[l]:
                        e = e + 1
                if e == 0:
                    a.append(d[j])
        else:
            if len(a) != 0:
                x = x + 1
                if len(a) <= 3:
                    b = b + 1
            a = []
    if b * 2 < x:
        w.append(data[i])
with open("output.txt", "w", encoding="cp866") as f:
    for i in range(len(w)):
        f.write(str(w[i]))
Кодировка: 
Скачать
text = open("input.txt", "r", encoding="cp866").readlines()

out = open("output.txt", "w", encoding="cp866")

def is_alpha(c):
    for a in [" ", ".", "!", "?", ":", "-", ",", ";", "(", ")", "\n"]:
        if c == a:
            return False
    return True

def get_words ( s ):
    words = []
    
    word=""
    for c in s:
        if is_alpha(c):
            word += c
        else:
            if len(word) > 0:
                words.append(word)
                word = ""
    
    if len(word) > 0:
        words.append(word)
        word = ""    
                
    return words

def is_word_ok (word):
    letters = set(word)
    return len(letters) > 3

def is_words_ok (words):
    nb_ok = 0
    for word in words:
        if is_word_ok (word):
            nb_ok += 1

    return nb_ok > len (words) // 2 
    
for s in text:
    words = get_words (s)
    ok = is_words_ok (words)
    if ok == True:
        out.write (s)
    
out.close()
Кодировка: 
Скачать
symb = '\n .!?:-,;()'

def pword(word):
    return len(set(word)) > 3

def pline(line):
    l = len(line)
    total = good = 0
    i = 0
    while i<l:
        while i<l and line[i] in symb:
            i += 1
        t = i
        while i<l and line[i] not in symb:
            i += 1
        if i != t:
            total += 1
            good += pword(line[t:i])
    return 2*good > total

def ptext(text):
    ret = []
    for line in text:
        if pline(line):
            ret.append(line)
    return ret

inp = open('input.txt', 'r', encoding='cp866').readlines()
out = ptext(inp)
out = ''.join(out)
open('output.txt', 'w', encoding='cp866').write(out)
Кодировка: 
Скачать
#include <bits/stdc++.h>

using namespace std;

int main() {
    string s;
    set <char> stop = {'.', '!', '?', ':', '-', ',', ';', '(', ')', ' '};
    while (getline(cin, s)) {
        int cnt = 0;
        int all_words = 0;
        set <char> S;
        bool  upd = false;
        s.push_back(' ');
        for (unsigned char c : s) {
            if (stop.find(c) == stop.end()) {
                S.insert(c);
                upd = false;
            }
            else if (!upd){
                if ((S.size() <= 3) && !S.empty())
                    cnt++;
                if (!S.empty())
                    all_words++;
                S.clear();
                upd = true;
            }
        }
        if (2 * cnt < (all_words))
            cout << s << "\n";
    }
}
Кодировка: 
Скачать
def GetPhrase(phNum):
    global data
    return data[phNum]


def ClearPhrase(phrase):
    trashSym = ['.', '!', '?', ':', '-', ',', ';', '(', ')']
    for i in trashSym:
        phrase = phrase.replace(i, " ")
    return phrase


def IsWordCorrect(word):
    letters = ""
    for i in word:
        if letters.find(i) == -1:
            letters += i
    return True if len(letters) > 3 else False


def IsPhraseCorrect(phrase):
    words = ClearPhrase(phrase.rstrip('\n')).split(' ')
    length = 0
    correct = 0
    for i in words:
        if i:
            correct += 1 if IsWordCorrect(i) else 0
            length += 1
    if correct == 0:
        return 2
    return length // correct


def DisplayCorrect(phMax):
    out = ""
    for i in range(phMax):
        phrase = GetPhrase(i)
        if IsPhraseCorrect(phrase) < 2:
            out += phrase
    return out


data = open("input.txt", 'r', encoding="cp866").readlines()
open("output.txt", 'w', encoding="cp866").write(DisplayCorrect(len(data)))
