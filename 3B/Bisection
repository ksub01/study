a = int(input())
но почему int?!


a = int(input())
k = int(input())
left = 0
right = a
eps = 1e-7
while right - left > eps:
    m = (right + left) / 2
    if m**k < a:
        left = m
    else:
        right = m
print(right)



Да, очень похоже на правду, 
но тут есть некоторые подлые случаи.
Постарайтесь их найти.

a = float(input())
k = int(input())
left = 0
right = a
eps = 1e-7
while right - left > eps:
    m = (right + left) / 2
    if m**k < a:
        left = m
    else:
        right = m
print(right)


a = float(input())
k = int(input())
left = 0
right = max(a, 1)
eps = 1e-7
while right - left > eps:
    m = (right + left) / 2
    if m**k < a:
        left = m
    else:
        right = m
print(right)

Найди ошибку: Деление пополам
a=float(input())
n=int(input())
l=0
r=a
eps=10e-8
while (r-l)>eps:
    m=(r+l)/2
    if m**n<a:
        l=m
    else:
        r=m
print(r)

a = float(input())
n = int(input())
start = -1
end = max(a, 1)
while end - start > 0.0000001:
    middle = (start + end) / 2
    if (middle ** n < a):
        start = middle
    else:
        end = middle
print(end)

///Gleb is Always Right

#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/rope>

#define fi first
#define se second
#define pb push_back
#define all(x) x.begin(),x.end()
#define sz(x) ((ll)(x).size())
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
#define sqr(x) ((x)*(x))
#define count_one __builtin_popcount(x)

using namespace std;
//using namespace __gnu_pbds;
//using namespace __gnu_cxx;

//typedef tree <int, null_type, less <int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;

/*indexed_set s;
s.insert(a);
cout << *s.find_by_order(i) << '\n';
cout << s.order_of_key(k);*/

typedef long long ll;
typedef long double ld;

const ld PI = 3.1415926535;
const ll N = 2e5 + 7;
const ll INF = 1e18 + 7;
const ll d2x[4] = {0, 1, 0, -1};
const ll d2y[4] = {1, 0, -1, 0};
const ll d3x[8] = {1, 1, 1, 0, -1, -1, -1, 0};
const ll d3y[8] = {1, 0, -1, -1, -1, 0, 1, 1};

void indent() {
    cerr << "\n\n\n";
}

void Solve() {
    ld a;
    ll n;
    cin >> a >> n;
    ld l = 0, r = 1002, m, ep = 1 / 1e15;
    for (int o = 0; o < 1000; o++) {
        m = (l + r) / 2;
        ld ans = pow(m, n);
        if (ans - ep >= a)
            r = m;
        else
            l = m;
    }
    cout << fixed << setprecision(7) << m;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    ll tests = 1;
    //cin >> tests;
    while(tests--)
        Solve();
    return 0;
}

Хорошие решения
#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <stack>
#include <queue>
#include <string>

using namespace std;

typedef long long ll;

#define f first
#define s second

double EPS = 0.000000001;

bool check(double &mid, ll &st, double &num) {
	double dop = 1;
	for (ll i = 0; i < st; i++) dop *= mid;
	return dop >= num;
}

int main() {
	double num, left, right;
	ll st;
	cin >> num >> st;
	left = 0; 
	right = max(1.0, num);
	double mid, dop;
	while(right - left > EPS) {
		mid = (right + left) / 2;
		if (check(mid, st, num)) right = mid;
		else left = mid;
	}
	cout.precision(10);
	cout << right;
	return 0;
}
Кодировка: 
Скачать
def st(n,s,p):
    r = n ** s
    return(r > p)
eps = 0.0000001
a = float(input())
b = int(input())
ma = max(a,1)
mi = 0
while ma - mi > eps:
    mt = mi + ((ma - mi) / 2)
    if st(mt,b,a):
        ma = mt
    else:
        mi = mt
print(mi)
Кодировка: 
Скачать
#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double a,l,r,m;
    int n;
    cin >> a >> n;
    l = 0; r = a;
    if (r < 1) r = 1;
    while (r-l > 1e-7) {
        m = (r+l)/2;
        if (pow(m,n) < a) {
            l = m;
        } else {
            r = m;
        }
    }
    cout.precision(7);
    cout << l;
    return 0;
}
Кодировка: 
Скачать
number = float(input())
sqrt = int(input())

left = 0

right = max(number, 1)
eps = 10 ** (-12)
while right - left > eps:
    middle = (left + right) / 2.0
    if middle ** sqrt > number:
        right = middle
    else:
        left = middle

print middle
Кодировка: 
Скачать
a=float(input())
n=int(input())
if a<1:
    l=a
    r=1000
else:
    l=0
    r=a
eps=1e-8
while r-l>eps:
    m=(r+l)/2
    if m**n>a:
        r=m
    else:
        l=m
print(l)
