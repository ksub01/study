n, m = map(int, input().rstrip().split())
people = [[] for x in range(n+1)]
was = [0] * (n+1)
flag = True
for i in range(m):
    p1, p2 = map(int, input().rstrip().split())
    people[p1].append(p2)
    people[p2].append(p1)


def find(v):
    for j in people[v]:
        if was[j] == 0:
            was[j] = 3 - was[v]
            find(j)
        else:
            if was[j] == was[v]:
                global flag
                flag = False
                break


for i in range(1, n+1):
    if was[i] == 0:
        was[i] = 1
        find(i)

if flag:
    print('YES')
    for i in range(len(was)):
        if was[i] == 1:
            print(i, end=' ')
else:
    print('NO')
    
    
    
    
    
    
Хорошие решения
def dfs(u):
    global answer
    for v in mas[u]:
        if color[v] == 0:
            color[v] = 3 - color[u]
            dfs(v)
        elif color[u] == color[v] :
            answer = 1


n, m = map(int, input().split())
mas = [[] for i in range(n)]
color = [0] * n
for i in range(m):
    a, b = map(int, input().split())
    mas[a-1].append(b-1)
    mas[b-1].append(a-1)
answer = 0
for i in range(n):
    if color[i] == 0:
        color[i] = 1
        dfs(i)

if answer == 1 :
    print("NO")
else:
    print("YES")
    mhr = []
    for i in range(n):
        if color[i] == 1:
            mhr.append(i+1)
    print(*mhr)
Кодировка: 
Скачать
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

bool o = true;
int n;
vector <int> was(101, 0);
vector <vector <int>> gr(101, vector <int>(101, 0));

void find(int i, int c)
{
	if (was[i] != 0)
	{
		if (was[i] != c) o = false;
		return;
	}
	was[i] = c;

	for (int j = 1; j <= n; j++)
	{
		if (gr[i][j] == 1)
		{
			find(j, 3 - c);
			if (!o) return;
		}
	}
	return;
}

int main()
{


	int b, a, k = 0, l;

	cin >> n;
	cin >> l;

	for (int i = 1; i <= l; i++)
	{
		cin >> a;
		cin >> b;
		gr[a][b] = 1;
		gr[b][a] = 1;
	}

	for (int i = 1; i <= n; i++)
		if (was[i] == 0)
		{
			find(i, 1);
			if (!o) break;
		}
	if (!o) cout << "NO";
	else
	{
		cout << "YES" << endl;
		for (int i = 1; i <= n; i++)
		{
			if (was[i] == 1) cout << i << " ";
		}
	}

	return 0;
}
Кодировка: 
Скачать
#include <bits/stdc++.h>

using namespace std;

int n, g[101][101], col[101], bad;

void dfs(int v, int p, int path = 0)
{
    if (path % 2 == 0)
        col[v] = 1;
    else
        col[v] = 2;
    for (int i = 1; i <= n; i++)
    {
        if (g[v][i] && !col[i])
            dfs(i, v, path + 1);
        if (g[v][i] && col[v] == col[i])
            bad = 1;
    }
}

int main()
{
    int m;

    cin >> n >> m;

    for (int i = 0; i < m; i++)
    {
        int x, y;

        cin >> x >> y;

        g[x][y] = g[y][x] = 1;
    }

    for (int i = 1; i <= n; i++)
    {
        if (!col[i])
            dfs(i, 0);
        if (bad)
        {
            puts("NO");
            return 0;
        }
    }
    puts("YES");

    for (int i = 1; i <= n; i++)
        if (col[i] == 1)
            cout << i << endl;

    return 0;
}
