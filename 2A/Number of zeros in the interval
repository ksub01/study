n = int(input())
list1 = list(map(int, input().split()))
list2 = [0]
sum1 = 0
for i in range(n):
    if list1[i] == 0:
        sum1 += 1
    list2.append(sum1)
l = int(input())
for i in range(l):
    a, b = map(int, input().split())
    print(list2[b] - list2[a-1])


Хорошие решения
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define y1 y3278
#define sz(v) ll (v.size())
#define y2 y4368
#define y y4368232
#define x x43682322
#define ff first
#define ss second
#define pb push_back
#define all(a) a.begin(),a.end()
#define tm tm3278
#define left left3278
#define right right3278
typedef long long ll;
typedef long double ld;
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;
template<class T> using indexed_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const long long INF = 2000000000000000000;
const long long Maxll = 9223372036854775807;
const long long MOD = 1000000000000037;
const ll MOD2 = 1100000009;
const ll inf = 1000000000;
const long long q0 = 31;
const ll differ = 'a' - 'A';
mt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());

/// Actual code starts here
int n, m;



void VOLK() {
    cin >> n;
    vector<int> vec(n);
    for (auto &i : vec) cin >> i;
    vector<int> pref(n);
    for (int i = 0;i < n;i++) pref[i] = (vec[i] == 0);
    for (int i = 1;i < n;i++) pref[i] += pref[i - 1];
    cin >> m;
    while(m--) {
        int x, y;
        cin >> x >> y;
        x--,y--;
        int res = pref[y];
        if (x) res -= pref[x - 1];
        cout << res << ' ';
    }
}

signed main() {
    ios::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--)
        VOLK();
}
Кодировка: 
Скачать
#include <iostream>
#include<vector>

using namespace std;

int main()
{
	int n, m, a, b;
	cin >> n;
	vector<int> v(n);
	vector<int> p(n + 1);
	for (int i = 0; i < n; i++) cin >> v[i];
	for (int i = 1; i <= n; i++) p[i] = p[i - 1] + (v[i - 1]==0?1:0);
	cin >> m;

	for (int i = 0; i < m; i++)
	{
		cin >> a >> b;
		cout << p[b] - p[a - 1] << " ";

	}
}
Кодировка: 
Скачать
// https://algoprog.ru/material/p3313

#include <vector>
#include <iostream>

using namespace std;

int main() {
  int n;
  cin >> n;

  vector<int> a(n);
  for (int i = 0; i < n; ++i) cin >> a[i];

  vector<int> cnt(n + 1);
  for (int i = 0; i < n; ++i) {
    cnt[i + 1] = cnt[i] + (a[i] == 0 ? 1 : 0);
  }
  

  int k;
  cin >> k;


  while (k--) {
    int start, end;
    cin >> start >> end;

    int ans = cnt[end] - cnt[start - 1];

    cout << ans << endl;

  }
    
}
Кодировка: 
Скачать
//package algoprog.level2.a.b_new_prefix_sum;

import java.io.*;
import java.util.StringTokenizer;

public class CountZerosOnInterval {

    public static void main(String[] args) throws IOException {
        final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(br.readLine());

        final int[] arr = readArray(br, n);
        int[] zeros = new int[arr.length + 1];

        for (int i = 0; i < arr.length; i++) {
            zeros[i + 1] = zeros[i] + (arr[i] == 0 ? 1 : 0);
        }

        final BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int m = Integer.parseInt(br.readLine());
        for (int i = 0; i < m; i++) {
            final StringTokenizer st2 = new StringTokenizer(br.readLine());
            int from = Integer.parseInt(st2.nextToken());
            int to = Integer.parseInt(st2.nextToken());

            bw.write((zeros[to] - zeros[from - 1]) + " ");
        }
        bw.flush();
    }

    private static int[] readArray(BufferedReader br, int n) throws IOException {
        int[] arr = new int[n];
        final StringTokenizer st = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(st.nextToken());
        }
        return arr;
    }
}
Кодировка: 
Скачать
n = int(input())
a = list(map(int, input().split()))
k = int(input())

b = [0]*(n + 1)
zero = 0
for i in range(len(a)):
    if a[i] == 0:
        zero += 1
    b[i + 1] = zero
ans = [0]*k
for i in range(k):
    left, right = map(int, input().split())
    ans[i] = b[right] - b[left - 1]
    
print(*ans)
