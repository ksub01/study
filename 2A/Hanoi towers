def move(n, start, finish):
    if n == 1:
        print(1, start, finish)
    else:
        temp = 6 - start - finish
        move(n - 1, start, temp)
        print(n, start, finish)
        move(n - 1, temp, finish)

move(int(input()), 1, 3)



Хорошие решения
#include <iostream>
#include <fstream>
#include <algorithm>
#include <functional>
#include <array>
#include <chrono>
#include <random>
#include <vector>
#include <string>
#include <cmath>
#include <bitset>
#include <list>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <cassert>

using namespace std;

using ll = long long;
using ull = unsigned long long;
using ld = long double;

void solve(int n, int f, int t) {
    if (n == 0)
        return;
    
    int oth = 3 + 2 + 1 - f - t;
    
    solve(n - 1, f, oth);
    cout << n << ' ' << f << ' ' << t << '\n';
    solve(n - 1, oth, t);
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(nullptr); cout.tie(nullptr);

    int n;
    cin >> n;
    
    solve(n, 1, 3);
    
    return 0;
}
Кодировка: 
Скачать
def move(n, st, fin):
	if n>0:
		t=6-st-fin
		move(n-1, st, t)
		print(n, st, fin)
		move(n-1, t, fin)

n=int(input())
move(n, 1, 3)
Кодировка: 
Скачать
// https://algoprog.ru/material/p3050

#include <iostream>
#include <vector>

using namespace std;

// position codes = {1,2,3}

int other(int source, int target) {
  return 6 - source - target;
}

void move_single(int label, int source, int target) {
  cout << label << " " << source << " " << target << endl;
}
  

void move(int v, int source, int target) {
  if (v == 0)
    return;
  move(v - 1, source, other(source, target));
  move_single(v, source, target);
  move(v - 1, other(source, target), target);
}

int main() {
  int n;
  cin >> n;

  move(n, 1, 3);
}
Кодировка: 
Скачать
#define ll long long
#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
#include <algorithm>
#include <queue>
using namespace std;

void tower(int n, int first, int second, int third) {
	if (n != 0) {
		tower(n - 1, first, third, second);
		cout << n << " " << first << " " << second << "\n";
		tower(n - 1, third, second, first);
	}
}



void true_main() {
	int n;
	cin >> n;

	tower(n, 1, 3, 2);

}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	ll t = 1;
	// cin >> t;
	for (ll i = 0; i < t; i++) {
		true_main();
		cout << "\n";
	}
	return 0;
}
Кодировка: 
Скачать
def Hanoy(n, a, b, c):
    if n == 1:
        print(1, a, c)
        return
    Hanoy(n - 1, a, c, b)
    print(n, a, c)
    Hanoy(n - 1, b, a, c)
    return

n = int(input())

Hanoy(n, 1, 2, 3)
