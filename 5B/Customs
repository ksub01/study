n = int(input())
mas = []
for i in range(n):
    v1, v2 = map(int, input().rstrip().split())
    v1, v2 = v1, v1+v2
    mas.append((v1, 1))
    mas.append((v2, 0))


mas.sort()
cou = 0
ans = 0
for i in mas:
    t = i[1]
    if t == 0:
        cou -= 1
    elif t == 1:
        cou += 1
    ans = max(ans, cou)
print(ans)


Хорошие решения
/**/

#include <iostream>
#include <iomanip>
#include <fstream>
#include <vector>
#include <deque>
#include <string>
#include <algorithm>
#include <cmath>
using namespace std;

int main()
{
	int n;
	cin >> n;
	int a, b;
	vector<pair<int, int>> v;
	for (int i = 0; i < n; i++) 
	{
		cin >> a >> b;
		b = a + b;
		v.push_back({ a, 1 });
		v.push_back({ b, -1 });
	}

	sort(v.begin(), v.end());

	int r = 0;
	int k = 0;

	for (auto p : v)
	{
		k += p.second;
		r = max(r, k);
	}

	cout << r << endl;

	cin >> n;
	return 0;
}

/**/
Кодировка: 
Скачать
#include <bits/stdc++.h>

using namespace std;

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    unsigned int n;
    scanf("%d", &n);
    vector <pair <int, bool>> segments;
    for (int i = 0; i < n; i++){
        int a, b;
        scanf("%d %d", &a, &b);
        segments.push_back({a, 1});
        segments.push_back({a + b, 0});
    }
    sort(segments.begin(), segments.end());
    int now_res = 0, max_res = 0;
    for (int i = 0; i < n * 2; i++){
        if (segments[i].second == 1) now_res++;
        else now_res--;
        if (now_res > max_res) max_res = now_res;
    }
    cout << max_res;
    return 0;
}
Кодировка: 
Скачать
#include <iostream>
#include <algorithm>

#define f first
#define s second

using namespace std;

const int N = 1e5;

pair<int, int> a[N];

int main(){
    int n;
    cin >> n;
    for(int i = 0; i < n; ++i){
        int x, y;
        cin >> x >> y;
        a[i * 2].f = x;
        a[i * 2].s = 1;
        a[i * 2 + 1].f = x + y;
        a[i * 2 + 1].s = 0;
    }
    sort(a, a + 2*n);
    int cnt = 0, ans = 0;
    for (int i = 0; i < 2*n; ++i){
        if(a[i].s == 1){
            ++cnt;
        }else{
            --cnt;
        }
        ans = max(cnt, ans);
    }
    cout << ans;
}
Кодировка: 
Скачать
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int n,cnt,m;
int main()
{
    cin >> n;
    vector<pair<int,int>> matrix(n);
    for (int i=0; i<n; i++)
    {
        int start,time;
        cin >> start >> time;
        matrix.push_back(make_pair(start,1));
        matrix.push_back(make_pair(start+time,-1));
    }
    sort(matrix.begin(),matrix.end());
    for (size_t i=0; i<matrix.size(); i++)
    {
        cnt+=matrix[i].second;
        if (cnt>m)
        {
            m=cnt;
        }
    }
    cout << m << endl;
    return 0;
}
Кодировка: 
Скачать
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
struct point 
{
   int x;
   int type;
   point( int x , int type)
   :
      x(x),
      type(type)
   {}
};
bool comp(point x,point y)
{
   if (x.x==y.x)
   {
      return x.type<y.type;
   }
   else
   {
      return x.x<y.x;
   }
}
int main()
{
   int n,cnt=0,max=-1e9;
   vector <point> points;
   scanf("%d",&n);
   for (int i=0;i<n;++i)
   {
      int start,end;
      char a;
      scanf("%d %d", &start , &end);
      end+=start; 
      points.push_back(point(start,1));
      points.push_back(point(end,-1));
   }
   sort(points.begin(),points.end(),comp);
   for (int i=0;i<points.size();++i)
   {
      cnt+=points[i].type;
      if (cnt>max)
      {
         max=cnt;
      }
   }
   printf("%d", max);
}
