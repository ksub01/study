if not(ans[i] < (a/100)*7 - eps):
не надо использовать вещественные числа 
там, где они не нужны.
Пишите типа ans[i] * 100 > a * 7

party, number = map(int, input().rstrip().split())
eps = 1e-12
ans = [0] * (party+1)
a = 0
for i in range(number):
    vote = input()
    if vote.count('+') == 1:
        a += 1
        for i in range(len(vote)):
            if vote[i] == '+':
                ans[i+1] += 1
for i in range(len(ans)):
    if not(ans[i] < (a/100)*7 - eps):
        print(i, end = ' ')
        
        

Я зачту, но я бы не проходился бы
по строке два раза (в count и потом в цикле),
а сделал бы все в одном цикле.

party, number = map(int, input().rstrip().split())
eps = 1e-12
ans = [0] * (party+1)
a = 0
for i in range(number):
    vote = input()
    if vote.count('+') == 1:
        a += 1
        for i in range(len(vote)):
            if vote[i] == '+':
                ans[i+1] += 1
for i in range(len(ans)):
    if ans[i] * 100 >= a * 7:
        print(i, end = ' ')


Найди ошибку: Выборы
#include <iomanip>
#include <math.h>
#include <stdlib.h>
#include <map>
#include <unordered_map>
#include <tuple>
#include <cmath>
#include <functional>
#include <cassert>
#include <algorithm>
#include <set>
#include <unordered_set>
#include <random>
#include <deque>
#include <numeric>
using namespace std;
#define kekek ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); srand(time(0))	
#define int long long

signed main() {
	kekek;
	
	int n, m;
	cin >> n >> m;
	vector<int> part(n);
	int cnt = 0;
	for (int i = 0; i < m; i++) {
		int pp = -1;
		bool f = true;
		for (int j = 0; j < n; j++) {
			char c;
			cin >> c;
			if (c == '+') {
				if (pp == -1) {
					pp = j;
				}
				else {
					f = false;
					break;
				}
			}
		}

		if (f && pp != -1) {
			cnt++;
			part[pp]++;
		}
	}

	for (int i = 0; i < n; i++) {
		if (part[i] * 100 >= cnt * 7) cout << i + 1 << " ";
	}

	//system("pause");
	return 0;
}

#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include <bitset>
#include <iomanip>
#include <math.h>
#include <stdlib.h>
#include <map>
#include <unordered_map>
#include <tuple>
#include <cmath>
#include <functional>
#include <cassert>
#include <algorithm>
#include <set>
#include <unordered_set>
#include <random>
#include <deque>
#include <numeric>
using namespace std;
#define kekek ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); srand(time(0))	
#define int long long

signed main() {
	kekek;
	
	int n, m;
	cin >> n >> m;
	vector<int> part(n);
	int cnt = 0;
	for (int i = 0; i < m; i++) {
		int pp = -1;
		bool f = true;
		for (int j = 0; j < n; j++) {
			char c;
			cin >> c;
			if (c == '+') {
				if (pp == -1) {
					pp = j;
				}
				else {
					f = false;
					break;
				}
			}
		}

		if (f && pp != -1) {
			cnt++;
			part[pp]++;
		}
	}

	for (int i = 0; i < n; i++) {
		if (part[i] * 100 >= cnt * 7) cout << i + 1 << " ";
	}

	//system("pause");
	return 0;
}


# -*- coding: utf-8 -*-
n, m = map(int, input().split())
a = []
b = []
c = []
f = 0
d = 0
l = 0
for i in range(m):
    a.append(input())
for i in range(n):
    b.append(0)
for i in range(m):
    for h in range(n):
        if a[i][h] == "+":
            f += 1
            d = h
    if f == 1:
        l += 1
        b[d] += 1
    f = 0
for i in range(len(b)):
    if (100 // l) * b[i] >= 7:
        c.append(i + 1)
print(* c)
