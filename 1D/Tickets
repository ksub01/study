number, k = map(int, input().split())
list1 = input().rstrip().split(' ')


num = 0
flag = False
position = 0
result = True

# расстояние
for start in range(number):
    s = list1[start:number:k]
    if s.count('1') == len(s):
        pass
    elif s.count('0') == len(s):
        pass
    elif s.count('1') == len(s) - 1 and not flag:
        position = start + s.index('0') * k + 1
        list1[position-1] = '1'
        flag = True
    elif s.count('0') == len(s) - 1 and not flag:
        position = start + s.index('1') * k + 1
        list1[position-1] = '0'
        flag = True
    else:
        result = False
        break

if result:
    print('OK')
    print(position)
else:
    print('FAIL')



Хорошие решения
//#include "/Users/stepan_bagritsevich/Dropbox/stdc++.h"
#include <bits/stdc++.h>
 
using namespace std;

#define pb push_back
#define fs first
#define sc second

typedef long long ll;
typedef long double ld;

const int MAX_VAL = 2147483647, MIN_VAL = -2147483648;

int n, k, num;
vector < int > a;

int mistakes(int i) {
    int zeroes = 0, ones = 0, zer_in, on_in;
    for (; i < n; i += k) {
        if (a[i] == 0) {
            zeroes++;
            zer_in = i;
        }
        
        if (a[i] == 1) {
            ones++;
            on_in = i;
        }
    }
    
    int res = min(zeroes, ones);
    if (res == 1)
        num = (zeroes <= ones) ? zer_in + 1 : on_in + 1;
    
    return res;
}

int main() {
    cin >> n >> k;
    a.resize(n);
    for (int i = 0; i < n; i++)
        cin >> a[i];
    
    int ans = 0;
    for (int i = 0; i < k; i++)
        ans += mistakes(i);
    
    if (ans <= 1) {
        cout << "OK" << "\n";
        cout << num << "\n";
    } else
        cout << "FAIL" << "\n";
    return 0;
}
Кодировка: 
Скачать
n, k = map(int, input().split())
b = list(map(int, input().split()))

ok = True
bad = 0
for i in range(k):
    c = b[i::k]
    o = sum(c)
    z = len(c) - o
    f = min(o, z)
    if f == 0:
        pass
    elif f == 1 and bad == 0:
        j = 0
        if o == 1:
            while c[j] == 0:
                j+=1
        else:
            while c[j] == 1:
                j+=1
        bad = (i+k*j)+1
    else:
        ok = False
        break

if not ok:
    print("FAIL")
else:
    print("OK")
    print(bad)
Кодировка: 
Скачать
#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>

using namespace std;

void v2print(const vector<vector<int>> & a) {
    for (int i = 0; i < (int)a.size(); ++i) {
        for (int j = 0; j < 4; ++j) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    ifstream cin("input.txt");
    int n, k, ai;
    cin >> n >> k;
    vector<vector<int>> a(k, vector<int>(4));
    for (int i = 0; i < n; ++i) {
        cin >> ai;
        if (a[i % k][ai] == 0) { // ��� ������ ������� ��� ���� � ������������������
            a[i % k][ai + 2] = i;
        }
        a[i % k][ai]++;
    }
    int err = 0; // ���������� ������
    int first_err = -1; // ������� ������ ������
    for (int i = 0; i < k; ++i) {
        //cout << a[i][0] << " " << a[i][1] << " " << a[i][2] << " " << a[i][3] << endl;
        if ((a[i][0] != 0) && (a[i][1] != 0)) {
            err += min(a[i][0], a[i][1]);
        }
        if (err > 1) {
            cout << "FAIL" << endl;
            return 0;
        }
        if (min(a[i][0], a[i][1]) == 1) { // ��������� ������� ������ ������
            if (a[i][0] == 1) { //��������� ����
                    first_err = a[i][2];
                } else {            //��������� �������
                    first_err = a[i][3];
                }
        }
    }

    cout << "OK" << endl;
    if (first_err == -1) {
        cout << 0 << endl;
    } else {
        cout << first_err + 1 << endl;
    }

    return 0;
}
Кодировка: 
Скачать
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>


int main()
{
	int n, k, i, j,t[50000];
	int fail=0,k0=0,k1=0,ans=0,ans0,ans1;

	scanf("%d %d", &n, &k);
	for (i = 0; i < n; i++)
		scanf("%d", &t[i]);
	for (i = 0; i < k; i++)
	{
		for (j = i; j < n; j += k)
		{
			if (t[j] == 0)
			{
				ans0 = j+1;
				k0++;
			}
			else
			{
				ans1 = j+1;
				k1++;
			}
		}
		if (k0 >= 2 && k1 >= 2)
		{
			printf("FAIL");
			return 0;
		}
		if (k0 >= 1 && k1 == 1)
		{
			fail++;
			ans = ans1;
		}
		else if (k0 == 1 && k1 >= 1)
		{
			fail++;
			ans = ans0;
		}
		if (fail >= 2)
		{
			printf("FAIL");
			return 0;
		}
		k0 = 0;
		k1 = 0;
	}
	printf("OK\n");
	printf("%d", ans);
	return 0;
}
Кодировка: 
Скачать
n = [int(i) for i in input().split()]
n, k = n[0], n[1]
cnt = [[0, 0] for i in range(k)]
arr = [int(i) for i in input().split()]
for i in range(n):
	cnt[i%k][arr[i]] += 1

bad = -1

for i in range(k):
	if cnt[i][0] > 1 and cnt[i][1] > 1:
		print ("FAIL")
		exit()
	if cnt[i][0] > 0 and cnt[i][1] > 0:
		if bad != -1:
			print ("FAIL")
			exit()
		bad = i
print ("OK")
if (bad == -1):
	print ('0')
else:
	if cnt[bad][0] == 1:
		for i in range(bad, n, k):
			if arr[i] == 0:
				print(i + 1)
				exit()
	else:
		for i in range(bad, n, k):
			if arr[i] == 1:
				print(i + 1)
				exit()

