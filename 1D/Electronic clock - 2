В условии сказано:
...и без хитрого форматированного вывода (типа %02d).
Запись {0}:{1:0>2}:{2:0>2} я приравниваю к хитрому форматированию :)

a = int(input())
hours = a // 3600
a -= hours*3600
minutes = a // 60
a-= minutes*60
st = "{0}:{1:0>2}:{2:0>2}".format(hours % 24, minutes % 60, a)
print(st)


В условии сказано:
Задачу необходимо решить без использования условных операторов (в том числе без тернарного оператора ?: в С++),...

a = int(input())
hours = (a // 3600)
a -= hours*3600
hours %= 24
minutes = a // 60
a-= minutes*60

hours = str(hours)
minutes = str(minutes)
a = str(a)
if int(minutes) < 10:
    minutes = '0' + minutes
if int(a) < 10:
    a = '0' + a
print(hours + ':' + minutes + ':' + a)

#ready

a = int(input())
hours = (a // 3600)
a -= hours*3600
hours %= 24
minutes = a // 60
a-= minutes*60


print(str(hours) + ':' +  str((minutes//10)%10) + str(minutes%10) + ':' + str((a//10)%10) + str(a%10))




Хорошие решения
t = int(input())
h = (t // 3600) % 24
h1 = t % 3600
m1 = h1 // 60 // 10
m2 = h1 // 60 % 10
s1 = h1 % 60 // 10
s2 = h1 % 60 % 10
print(h, ':', m1, m2, ':', s1, s2, sep='')
Кодировка: 
Скачать
#include <iostream>

using namespace std;

int main()
{
    int s;
    cin >> s;
    int h=s/3600;
    s%=3600;
    int m=s/60;
    s%=60;
    cout << h%24 << ":" << m/10 << m%10 << ":" << s/10 << s%10;
    return 0;
}
Кодировка: 
Скачать
#include <iostream>

using namespace std;

int main() {
	int sec, hour, min1, min2, sec1, sec2, sec0, min0;
	cin >> sec;
	sec0=sec%60;
	min0=sec/60;
	hour=sec/60/60;
	hour=hour%24;
	
	sec1=sec0%10;
	sec2=sec0/10;
	
	min0=min0%60;
	min1=min0%10;
	min2=min0/10;
	
	cout << hour << ':' << min2 << min1 << ':' << sec2 << sec1;
	return 0;
}
Кодировка: 
Скачать
n=int(input())
h=(n//3600)%24
n=n%3600
m=n//60
s=n%60
c=str(h)+":"+str(m//10)+str(m%10)+":"+str(s//10)+str(s%10)
print(c)
Кодировка: 
Скачать
#include <iostream>

using namespace std;

int main()
{
    int q;
    cin  >> q;
    int c = q%3600, d = c/60,e = q%60;
    cout  << q%(3600*24)/3600 << ":" << d/10 << d%10 <<":" << e/10 << e%10;
    return 0;
}
