n = int(input())
mas = [int(x) for x in input().rstrip().split()]
mas.sort()
cou = 0
for i in range(1, len(mas)):
    if mas[i] == mas[i-1]:
        cou += 1
print(len(mas) - cou)

Найди ошибку: Разные
#include<iostream>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;

void qsort(vector<int> & a, int left, int right) {
	if (right <= left)
		return;
	int q = a[(left + right) / 2];
	int i = left;
	int j = right;
	while (i <= j) {
		while (a[i] < q)
			i++;
		while (q < a[j])
			j--;
		if (i <= j) {
			swap(a[i], a[j]);
			i++;
			j--;
		}
	}
	qsort(a, left, j);
	qsort(a, i, right);
}

int main() {
	int n, sum = 0;
	cin >> n;
	vector<int> a(n);
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	qsort(a, 0, n);
	for (int i = 0; i < n - 1; i++) {
		if (a[i] != a[i + 1]) {
			sum++;
		}
	}
	cout << sum;
	return 0;
}


#include <iostream>
#include <vector>

using namespace std;

void sort(vector <int> &numbers, vector <int> &temp, int l, int r)
{
    int i, i1, i2, o;
    if (l >= r)
    {
        return;
    }
    o = (l + r) / 2;
    sort(numbers, temp, l, o);
    sort(numbers, temp, o + 1, r);
    i1 = l;
    i2 = o + 1;
    for (i = l; i <= r; i++)
    {
        if (i1 <= o && (i2 > r || numbers[i1] < numbers[i2]))
        {
            temp[i] = numbers[i1++];
        }
        else
        {
            temp[i] = numbers[i2++];
        }
    }
    for (i = l; i <= r; i++)
    {
        numbers[i] = temp[i];
    }
}

int main()
{
    int n, i;
    cin >> n;
    vector <int> numbers;
    for (i = 0; i < n; i++)
    {
        int t;
        cin >> t;
        numbers.push_back(t);
    }
    vector <int> temp = numbers;
    int count = 0;
    sort(numbers, temp, 0, n - 1);
    for (i = 0; i < n; i++)
    {
        if (numbers[i] != numbers[i - 1])
        {
            count++;
        }
    }
    cout << count;
    return 0;
}

Хорошие решения
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>

#include <map>
#include <sstream>

using namespace std;

void msort(vector<int64_t>& arr, int64_t n, int64_t m) {
	if (n >= m)
		return;
	
	int64_t l = (m + n) / 2;
	msort(arr, n, l);
	msort(arr, l + 1, m);
	int64_t a = n;
	int64_t b = l + 1;
	vector<int64_t> arr1;
	for (int64_t i = 0; i < m - n + 1; i++) {
		if (a < l + 1 && ( b > m || arr[a] < arr[b])) {
			arr1.push_back(arr[a]);
			a++;
		}
		else {
			arr1.push_back(arr[b]);
			b++;
		}
	}
	for (int64_t i = 0; i < arr1.size(); i++) {
		arr[n + i] = arr1[i];
	}
}

int main() {
	int64_t n;
	cin >> n;
	vector<int64_t> arr(n);
	for (int64_t& e : arr) {
		cin >> e;
	}
	msort(arr, 0, arr.size()-1);
	int64_t counter = 1;
	for (int64_t i = 1; i < arr.size(); i++) {
		if (arr[i] != arr[i - 1])
			counter++;
	}
	cout << counter;
}
Кодировка: 
Скачать
n = int(input())
m = list(map(int,input().split()))
m.sort()
r = 1
for x in range(1,len(m)):
    if m[x] != m[x - 1]:
        r += 1
print(r)
Кодировка: 
Скачать
#include <iostream>
#include <vector>

using namespace std;

vector<int> a;
vector<int> temp;

void merge_sort(int l, int r) {
	int m = (l + r) / 2;
	if (l >= r) {
		return;
	}
	merge_sort(l, m);
	merge_sort(m + 1, r);
	int p = l, p1 = m + 1;
	for (int i = l; i <= r; ++i) {
		if ((p <= m) && (p1 > r || a[p] < a[p1])) {
			temp[i] = a[p];
			++p;
		}
		else {
			temp[i] = a[p1];
			++p1;
		}
	}
	for (int i = l; i <= r; ++i) {
		a[i] = temp[i];
	}
}

int main() {
	int n;
	int s=1;
	cin >> n;
	a.resize(n);
	temp.resize(n);
	for (int i = 0; i < n; ++i) {
		cin >> a[i];
	}
	merge_sort(0, n - 1);
	for (int i = 0; i < n-1; i++)
	{	
		if (a[i] != a[i + 1]) s += 1;
	}
	cout << s;
}
Кодировка: 
Скачать
#include <bits/stdc++.h>

using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    sort(a.begin(), a.end());
    int last = -1, ans = 0;
    for (int e : a) {
        if (e != last) {
            ans++;
        }
        last = e;
    }
    cout << ans;
}
Кодировка: 
Скачать
#include <iostream>
#include <vector>
#include <string>
#include <deque>
#include <set>
using namespace std;
typedef long long long_;

int logsort(vector<int>& my, vector<int>& help, int l, int r) {
	if (l >= r) return 0;	//����� ����������� ����� ������� � 1 �������?

	int kek = (l + r) / 2;
	logsort(my, help, l, kek);
	logsort(my, help, kek + 1, r);

	int it1 = l, it2 = kek + 1;
	for (int i = l; i <= r; i++) {
		if (it1 <= kek && (it2 > r || my[it1] < my[it2])) {
			help[i] = my[it1];
			it1++;
		}
		else {
			help[i] = my[it2];
			it2++;
		}
	}

	for (int i = l; i <= r; i++) {
		my[i] = help[i];
	}

	return 0;
}

int main() {
	int n;
	cin >> n;
	vector<int> my(n);
	for (int i = 0; i < n; i++)
		cin >> my[i];
	vector<int> help(n, 0);

	logsort(my, help, 0, n - 1);

	//for (int i = 0; i < n; i++) cout << my[i] << " ";

	int ans = 1;
	for (int i = 0; i < n-1; i++) {
		if (my[i] < my[i + 1]) ans++;
	}

	cout << ans;
	
	//system("pause");
	return 0;
}
